$btn-warning-bg-custom: lighten($btn-warning-bg, 20%);

// Gradient button backgrounds
// --------------------------------------------------

// Define percentage of how much btn-bg should get darkened for each step
$level-dark: 3%;
$level-darker: 6%;
$level-darkest: 9%;

// Map darkening steps
$btn-default-bg-color-steps: (
	default: $btn-default-bg,
	dark: darken($btn-default-bg, $level-dark),
	darker: darken($btn-default-bg, $level-darker),
	darkest: darken($btn-default-bg, $level-darkest)
);

$btn-primary-bg-color-steps: (
	default: $btn-primary-bg,
	dark: darken($btn-primary-bg, $level-dark),
	darker: darken($btn-primary-bg, $level-darker),
	darkest: darken($btn-primary-bg, $level-darkest)
);

$btn-success-bg-color-steps: (
	default: $btn-success-bg,
	dark: darken($btn-success-bg, $level-dark),
	darker: darken($btn-success-bg, $level-darker),
	darkest: darken($btn-success-bg, $level-darkest)
);

$btn-warning-bg-color-steps: (
	default: $btn-warning-bg-custom,
	dark: darken($btn-warning-bg-custom, $level-dark),
	darker: darken($btn-warning-bg-custom, $level-darker),
	darkest: darken($btn-warning-bg-custom, $level-darkest)
);

$btn-danger-bg-color-steps: (
	default: $btn-danger-bg,
	dark: darken($btn-danger-bg, $level-dark),
	darker: darken($btn-danger-bg, $level-darker),
	darkest: darken($btn-danger-bg, $level-darkest)
);

// Map maps containing darkening steps according to btn-variant
$all-btn-bg-color-steps: (
	default: $btn-default-bg-color-steps,
	primary: $btn-primary-bg-color-steps,
	success: $btn-success-bg-color-steps,
	warning: $btn-warning-bg-color-steps,
	danger: $btn-danger-bg-color-steps
);

// Iterate over button variants and their darkening steps and apply gradient backgrounds for each one
@each $btn-variant, $btn-bg-color-steps in $all-btn-bg-color-steps {
	.btn-#{$btn-variant} {
		box-shadow: inset 0 1px 0 rgba(255, 255, 255, 0.1);
		@include gradient-vertical(map-get($btn-bg-color-steps, default), map-get($btn-bg-color-steps, darker));

		&:hover {
			@include gradient-vertical(map-get($btn-bg-color-steps, dark), map-get($btn-bg-color-steps, darkest));
		}
	}
}

.btn-go {
	@extend .btn-primary;
	// @include button-variant($btn-primary-color, $btn-primary-bg, $btn-primary-border);
}

.btn-add,
.btn-save {
	@extend .btn-success;
	// @include button-variant($btn-success-color, $btn-success-bg, $btn-success-border);
}

.btn-edit {
	@extend .btn-default;
	// @include button-variant($btn-default-color, $btn-default-bg, $btn-default-border);
}

// Cancel/Delete button style, turning red when beeing hovered over
.btn-cancel,
.btn-delete,
.btn-remove {
	@include gradient-vertical(map-get($btn-danger-bg-color-steps, default), map-get($btn-danger-bg-color-steps, darker));
	border: 1px solid $btn-danger-border;

	@media (min-width: $screen-xs) {
		@include gradient-vertical(map-get($btn-default-bg-color-steps, default), map-get($btn-default-bg-color-steps, darker));
		border: 1px solid $btn-default-border;

		&:hover {
			@include gradient-vertical(map-get($btn-danger-bg-color-steps, default), map-get($btn-danger-bg-color-steps, darker));
			border: 1px solid $btn-danger-border;
		}
	}
}

// Gradient background for active default btn
.btn-default.active {
	@include gradient-vertical(map-get($btn-default-bg-color-steps, dark), map-get($btn-default-bg-color-steps, darkest));
}

button.list-group-item {
	@include gradient-vertical(map-get($btn-default-bg-color-steps, default), map-get($btn-default-bg-color-steps, darker));
	border-color: $btn-default-border;

	&:hover {
		@include gradient-vertical(map-get($btn-default-bg-color-steps, dark), map-get($btn-default-bg-color-steps, darkest));
		border-color: #8dc3d6;
	}
}
